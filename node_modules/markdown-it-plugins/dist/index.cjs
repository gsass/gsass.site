"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const MarkdownContainer=require("markdown-it-container");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e.default:e}const MarkdownContainer__default=_interopDefaultLegacy(MarkdownContainer);function container(n){const r=/(tip|warning|danger|details)\s?(.*)/;let o;n.use(MarkdownContainer__default,"container",{validate:e=>e.trim().match(r),render(e,t){return 1===e[t].nesting?([,e,t]=e[t].info.trim().match(r),o=e,t=t,"details"===(e=e)?'<details class="prompt-container details">'+(t?`<summary class="prompt-container-title">${n.utils.escapeHtml(t)}</summary>`:""):`<div class="prompt-container ${e}"><p class="prompt-container-title">${n.utils.escapeHtml(t)}</p>`):"details"===o?"</details>":"</div>"}})}function noticeboard(e){const a="?> ";e.block.ruler.before("paragraph","noticeboard",(r,o,e,s)=>{if(4<=r.sCount[o]-r.blkIndent)return!1;var t=r.eMarks[o],n=r.bMarks[o]+r.tShift[o];const i=r.src.substring(n,t).trim();if(i.startsWith(a)||i.startsWith("!> ")){if(s)return!0;let e,t,n;return n=i.startsWith(a)?(t="tip",a):(t="danger","!> "),(e=r.push("notice_open","div",1)).attrs=[["class","noticeboard "+t]],e.markup=n,e.map=[o,r.line],(e=r.push("inline","",0)).map=[o,r.line],e.content=i.substring(a.length),e.children=[],(e=r.push("notice_close","div",-1)).markup=n,r.line=o+1,!0}return!1})}function codeLineNumbers(e){const r=e.renderer.rules.fence;e.renderer.rules.fence=(e,t,...n)=>{return`
      <ul class="code-line-numbers">
        ${([...new Array(e[t].content.split("\n").length).keys()].join('</li><li class="line">')+"</li>").slice(6)}
      </ul>
      ${r(e,t,...n)}
    `}}function collectBlockCode(e,{lang:i=!0,copy:a=!1,open:c=!0,copyText:l="Copy",separator:d=":",blockName:u=!1}={}){const p=e.renderer.rules.fence;let m,f;e.renderer.rules.fence=(e,t,...n)=>{var[r,o,s]=e[t].info.split(d).map(e=>e.trim());return f=s?"close"===s?"":"open"===s?"open":s:c?"open":"",m=`<details class="collect-block-code" ${f?"open":""}><summary class="collect-block-trigger"><i class="block-code-icon"></i>`+(u&&o?`<p class="block-code-name">${o}</p>`:'<i style="flex:1"></i>'),(a||u)&&(m+=(i?`<span class="block-code-lang">${r}</span>`:"")+(a?`<button class="copy-code-btn">${l}</button>`:"")),m+=`</summary><div class="collect-block-content">${p(e,t,...n)}</div></details>`}}function extendImageTitle(e){const i=e.renderer.rules.image;e.renderer.rules.image=(e,t,...n)=>{const r=e[t];var o=r.attrs?.findIndex(([e])=>"title"===e);if(o&&0<=o&&~r.attrs[o][1].indexOf("=")){let t,n;const s=r.attrs[o][1].split("&");r.attrSet("title",""),r.attrSet("loading","lazy"),s.forEach(e=>{[t,n]=e.split("="),r.attrSet(t,n)})}return i(e,t,...n)}}exports.codeLineNumbers=codeLineNumbers,exports.collectBlockCode=collectBlockCode,exports.container=container,exports.extendImageTitle=extendImageTitle,exports.noticeboard=noticeboard;